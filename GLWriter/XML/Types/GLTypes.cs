using GLWriter.CSharp;

namespace GLWriter.XML.Types
{
    public enum GLTypes
    {
        None,
        Enum,
        Boolean,
        Bitfield,
        Void,
        Byte,
        UByte,
        Short,
        UShort,
        Int,
        UInt,
        ClampX,
        Sizei,
        Float,
        ClampF,
        Double,
        ClampD,
        EGLClientBufferEXT,
        EGLImageOES,
        Char,
        CharARB,
        HandleARB,
        Half,
        HalfARB,
        Fixed,
        IntPtr,
        IntPtrARB,
        SizeiPtr,
        SizeiPtrARB,
        Int64,
        Int64EXT,
        UInt64,
        UInt64EXT,
        Sync,
        ContextStruct,
        EventStruct,
        DebugProc,
        DebugProcARB,
        DebugProcKHR,
        DebugProcAMD,
        HalfNV,
        VDPauSurfaceNV,
        VulkanProcNV
    }

    public static class GLTypeExtensions
    {
        public static CSharpType ToCSharpType(this GLTypes glType, string group) => glType switch
        {
            GLTypes.Enum => new CSharpType(DataTypes.Enum, TypeModifiers.None, group),
            GLTypes.Boolean => new CSharpType(DataTypes.Bool, TypeModifiers.None, group),
            GLTypes.Bitfield => new CSharpType(DataTypes.Int, TypeModifiers.None, group),
            GLTypes.Void => new CSharpType(DataTypes.Void, TypeModifiers.None, group),
            GLTypes.Byte => new CSharpType(DataTypes.Byte, TypeModifiers.None, group),
            GLTypes.UByte => new CSharpType(DataTypes.Byte, TypeModifiers.None, group),
            GLTypes.Short => new CSharpType(DataTypes.Short, TypeModifiers.None, group),
            GLTypes.UShort => new CSharpType(DataTypes.UShort, TypeModifiers.None, group),
            GLTypes.Int => new CSharpType(DataTypes.Int, TypeModifiers.None, group),
            GLTypes.UInt => new CSharpType(DataTypes.UInt, TypeModifiers.None, group),
            GLTypes.ClampX => new CSharpType(DataTypes.Int, TypeModifiers.None, group),
            GLTypes.Sizei => new CSharpType(DataTypes.Int, TypeModifiers.None, group),
            GLTypes.Float => new CSharpType(DataTypes.Float, TypeModifiers.None, group),
            GLTypes.ClampF => new CSharpType(DataTypes.Float, TypeModifiers.None, group),
            GLTypes.Double => new CSharpType(DataTypes.Double, TypeModifiers.None, group),
            GLTypes.ClampD => new CSharpType(DataTypes.Double, TypeModifiers.None, group),
            GLTypes.EGLClientBufferEXT => new CSharpType(DataTypes.Void, TypeModifiers.Pointer, group),
            GLTypes.EGLImageOES => new CSharpType(DataTypes.Void, TypeModifiers.Pointer, group),
            GLTypes.Char => new CSharpType(DataTypes.Char, TypeModifiers.None, group),
            GLTypes.CharARB => new CSharpType(DataTypes.Char, TypeModifiers.None, group),
            GLTypes.HandleARB =>
#if OSX
            new CSharpType(DataTypes.Void, TypeModifiers.Pointer, group),
#else
            new CSharpType(DataTypes.UInt, TypeModifiers.None, group),
#endif
            GLTypes.Half => new CSharpType(DataTypes.UShort, TypeModifiers.None, group),
            GLTypes.HalfARB => new CSharpType(DataTypes.UShort, TypeModifiers.None, group),
            GLTypes.Fixed => new CSharpType(DataTypes.Int, TypeModifiers.None, group),
            GLTypes.IntPtr => new CSharpType(DataTypes.IntPtr, TypeModifiers.None, group),
            GLTypes.IntPtrARB => new CSharpType(DataTypes.IntPtr, TypeModifiers.None, group),
            GLTypes.SizeiPtr => new CSharpType(DataTypes.IntPtr, TypeModifiers.None, group),
            GLTypes.SizeiPtrARB => new CSharpType(DataTypes.IntPtr, TypeModifiers.None, group),
            GLTypes.Int64 => new CSharpType(DataTypes.Long, TypeModifiers.None, group),
            GLTypes.Int64EXT => new CSharpType(DataTypes.Long, TypeModifiers.None, group),
            GLTypes.UInt64 => new CSharpType(DataTypes.ULong, TypeModifiers.None, group),
            GLTypes.UInt64EXT => new CSharpType(DataTypes.ULong, TypeModifiers.None, group),
            GLTypes.Sync => new CSharpType(DataTypes.Struct, TypeModifiers.Pointer, group),
            GLTypes.ContextStruct => new CSharpType(DataTypes.Struct, TypeModifiers.None, group),
            GLTypes.EventStruct => new CSharpType(DataTypes.Struct, TypeModifiers.None, group),
            GLTypes.DebugProc => new CSharpType(DataTypes.Void, TypeModifiers.Pointer, group),
            GLTypes.DebugProcARB => new CSharpType(DataTypes.Void, TypeModifiers.Pointer, group),
            GLTypes.DebugProcKHR => new CSharpType(DataTypes.Void, TypeModifiers.Pointer, group),
            GLTypes.DebugProcAMD => new CSharpType(DataTypes.Void, TypeModifiers.Pointer, group),
            GLTypes.HalfNV => new CSharpType(DataTypes.UShort, TypeModifiers.None, group),
            GLTypes.VDPauSurfaceNV => new CSharpType(DataTypes.IntPtr, TypeModifiers.None, group),
            GLTypes.VulkanProcNV => new CSharpType(DataTypes.Void, TypeModifiers.Pointer, group),
            _ => new CSharpType(DataTypes.None)
        };

        public static GLTypes ParseGLType(string text) => text switch
        {
            "GLenum" => GLTypes.Enum,
            "GLboolean" => GLTypes.Boolean,
            "GLbitfield" => GLTypes.Bitfield,
            "GLvoid" => GLTypes.Void,
            "GLbyte" => GLTypes.Byte,
            "GLubyte" => GLTypes.UByte,
            "GLshort" => GLTypes.Short,
            "GLushort" => GLTypes.UShort,
            "GLint" => GLTypes.Int,
            "GLuint" => GLTypes.UInt,
            "GLclampx" => GLTypes.ClampX,
            "GLsizei" => GLTypes.Sizei,
            "GLfloat" => GLTypes.Float,
            "GLclampf" => GLTypes.ClampF,
            "GLdouble" => GLTypes.Double,
            "GLclampd" => GLTypes.ClampD,
            "GLeglClientBufferEXT" => GLTypes.EGLClientBufferEXT,
            "GLeglImageOES" => GLTypes.EGLImageOES,
            "GLchar" => GLTypes.Char,
            "GLcharARB" => GLTypes.CharARB,
            "GLhandleARB" => GLTypes.HandleARB,
            "GLhalf" => GLTypes.Half,
            "GLhalfARB" => GLTypes.HalfARB,
            "GLfixed" => GLTypes.Fixed,
            "GLintptr" => GLTypes.IntPtr,
            "GLintptrARB" => GLTypes.IntPtrARB,
            "GLsizeiptr" => GLTypes.SizeiPtr,
            "GLsizeiptrARB" => GLTypes.SizeiPtrARB,
            "GLint64" => GLTypes.Int64,
            "GLint64EXT" => GLTypes.Int64EXT,
            "GLuint64" => GLTypes.UInt64,
            "GLuint64EXT" => GLTypes.UInt64EXT,
            "GLsync" => GLTypes.Sync,
            "struct _cl_context" => GLTypes.ContextStruct,
            "struct _cl_event" => GLTypes.EventStruct,
            "GLDEBUGPROC" => GLTypes.DebugProc,
            "GLDEBUGPROCARB" => GLTypes.DebugProcAMD,
            "GLDEBUGPROCKHR" => GLTypes.DebugProcKHR,
            "GLDEBUGPROCAMD" => GLTypes.DebugProcAMD,
            "GLhalfNV" => GLTypes.HalfNV,
            "GLvdpauSurfaceNV" => GLTypes.VDPauSurfaceNV,
            "GLVULKANPROCNV" => GLTypes.VulkanProcNV,
            _ => GLTypes.None
        };
    }
}
